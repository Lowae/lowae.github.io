[{"title":"Test1","path":"/2024/09/07/test1/","content":"Test1"},{"title":"Hexo + Github Pages + Stellar主题博客搭建教程","path":"/2024/09/05/hello-world/","content":"按理说Hexo + Github Pages搭建博客教程一搜一大把那为啥我还要额外再写一篇呢？ 教程虽然很多，但是我还是踩了不少的坑花了不少时间，因此记录一下希望能够帮助到大家。 前置内容Git、Node.jsHexo是一个基于Node的博客框架，因此在使用Hexo搭建博客前你应当具有一定的Node基础，当然，也可以无基础，问AI也可以，毕竟Node.js的生态还是非常成熟的。因此这里不再复述Node.js的安装等等基本知识，这些AI回答的会更好。 Hexo搭建与初始化Hexo这块主要跟着官方文档开始使用部分走一遍即可，剩下的按需查阅。文档里会告诉你Hexo的一直前置依赖如Git,Node.js等等。 推荐直接安装最新的Hexo版本，目前较多的其他教程由于所使用的Theme或者部分依赖没有及时更新，固定了Hexo版本，同样的Node.js也推荐安装最新版本。 Node.js与Hexo的安装问题理论上可以完全依靠搜索引擎或者AI解决，因为绝大部分都是配置、环境问题导致，因此遇到问题后推荐仔细检查一下操作步骤与文档是否完全匹配或一致。 在完成Git、Node.js与Hexo配置后，按照Hexo文档所说执行以下命令。Hexo 将会在指定文件夹中新建所需要的文件。 123hexo init &lt;folder&gt;cd &lt;folder&gt;npm install 初始化后，您的项目文件夹将如下所示： 123456789.├── _config.yml├── package.json├── scaffolds├── source| ├── _drafts| └── _posts└── themes_config.yml 详细的内容可见Hexo-建站，后续继续按照Hexo文档操作新建一个.md博客文件，最终你应该会执行到以下命令完成构建： 123456//生成静态文件。hexo g(generate)//部署网站hexo d(deploy)//启动服务器hexo s(server) 通常来说，本地调试使用hexo g &amp;&amp; hexo s即可，此命名会生成静态文件并启动服务器(其中必要时可前置执行hexo clean清除缓存)。 下面重点来说下hexo d部署网站这部分，部署有两种方式： 将整个源文件以及生成文件都上传到Github仓库。 该方式比较简单但是有个弊端，Github的 分离源文件与生成文件 Github Pages"},{"title":"内容介绍","path":"/album/index.html","content":"这里是图集，存放一些旅行的过程中或者其他的有纪念意义的照片。"},{"title":"苏州 · 虎丘&留园","path":"/album/huqiu.html","content":"虎丘1虎丘2虎丘3虎丘4虎丘4留园1留园2留园3留园4"},{"title":"麦吉","path":"/album/machi.html","content":"麦吉1草地窗台上的麦吉枯萎的蓝玫瑰肥肥麦吉1肥肥麦吉2睡觉中的肥肥麦吉大菊花麦吉1大菊花麦吉2躺平探头探脑四处观望麦吉大战小花"},{"title":"福州 · 平潭岛","path":"/album/pingtan.html","content":"海边3海边1海边2海边4海边5海边6海边7海边8"},{"title":"index","path":"/doc/index.html","content":"这是文档页"}]